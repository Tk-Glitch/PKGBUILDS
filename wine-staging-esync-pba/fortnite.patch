diff -uNr a/dlls/dbghelp/Makefile.in a/dlls/dbghelp/Makefile.in
--- a/dlls/dbghelp/Makefile.in	2018-05-13 16:35:20.608289499 -0400
+++ a/dlls/dbghelp/Makefile.in	2018-05-12 14:45:29.266790282 -0400
@@ -3,6 +3,7 @@
 EXTRADEFS = -D_IMAGEHLP_SOURCE_ -DBINDIR="\"${bindir}\""
 DELAYIMPORTS = version
 EXTRALIBS = $(Z_LIBS) $(CORESERVICES_LIBS) $(COREFOUNDATION_LIBS)
+IMPORTS = psapi
 
 C_SRCS = \
 	coff.c \
diff -uNr a/dlls/dxdiagn/Makefile.in a/dlls/dxdiagn/Makefile.in
--- a/dlls/dxdiagn/Makefile.in	2018-05-13 16:35:20.818285063 -0400
+++ a/dlls/dxdiagn/Makefile.in	2018-05-12 14:45:29.280123576 -0400
@@ -1,5 +1,5 @@
 MODULE    = dxdiagn.dll
-IMPORTS   = strmiids dxguid uuid d3d9 ddraw version ole32 oleaut32 user32 advapi32 dsound
+IMPORTS   = strmiids dxguid uuid d3d9 ddraw version ole32 oleaut32 user32 advapi32 dsound psapi
 
 C_SRCS = \
 	container.c \
diff -uNr a/dlls/psapi/Makefile.in a/dlls/psapi/Makefile.in
--- a/dlls/psapi/Makefile.in	2018-04-27 14:23:54.000000000 -0400
+++ a/dlls/psapi/Makefile.in	2018-05-12 14:45:29.370123319 -0400
@@ -2,3 +2,5 @@
 IMPORTLIB = psapi
 
 RC_SRCS = version.rc
+
+C_SRCS = psapi_main2.c
diff -uNr a/dlls/psapi/psapi_bak.spec a/dlls/psapi/psapi_bak.spec
--- a/dlls/psapi/psapi_bak.spec	1969-12-31 19:00:00.000000000 -0500
+++ a/dlls/psapi/psapi_bak.spec	2018-05-12 14:45:29.380123290 -0400
@@ -0,0 +1,26 @@
+@ stdcall EmptyWorkingSet(long) kernel32.K32EmptyWorkingSet
+@ stdcall EnumDeviceDrivers(ptr long ptr) kernel32.K32EnumDeviceDrivers
+@ stdcall EnumPageFilesA(ptr ptr) kernel32.K32EnumPageFilesA
+@ stdcall EnumPageFilesW(ptr ptr) kernel32.K32EnumPageFilesW
+@ stdcall EnumProcessModules(long ptr long ptr) kernel32.K32EnumProcessModules
+@ stdcall EnumProcessModulesEx(long ptr long ptr long) kernel32.K32EnumProcessModulesEx
+@ stdcall EnumProcesses(ptr long ptr) kernel32.K32EnumProcesses
+@ stdcall GetDeviceDriverBaseNameA(ptr ptr long) kernel32.K32GetDeviceDriverBaseNameA
+@ stdcall GetDeviceDriverBaseNameW(ptr ptr long) kernel32.K32GetDeviceDriverBaseNameW
+@ stdcall GetDeviceDriverFileNameA(ptr ptr long) kernel32.K32GetDeviceDriverFileNameA
+@ stdcall GetDeviceDriverFileNameW(ptr ptr long) kernel32.K32GetDeviceDriverFileNameW
+@ stdcall GetMappedFileNameA(long ptr ptr long) kernel32.K32GetMappedFileNameA
+@ stdcall GetMappedFileNameW(long ptr ptr long) kernel32.K32GetMappedFileNameW
+@ stdcall GetModuleBaseNameA(long long ptr long) kernel32.K32GetModuleBaseNameA
+@ stdcall GetModuleBaseNameW(long long ptr long) kernel32.K32GetModuleBaseNameW
+@ stdcall GetModuleFileNameExA(long long ptr long) kernel32.K32GetModuleFileNameExA
+@ stdcall GetModuleFileNameExW(long long ptr long) kernel32.K32GetModuleFileNameExW
+@ stdcall GetModuleInformation(long long ptr long) kernel32.K32GetModuleInformation
+@ stdcall GetPerformanceInfo(ptr long) kernel32.K32GetPerformanceInfo
+@ stdcall GetProcessImageFileNameA(long ptr long) kernel32.K32GetProcessImageFileNameA
+@ stdcall GetProcessImageFileNameW(long ptr long) kernel32.K32GetProcessImageFileNameW
+@ stdcall GetProcessMemoryInfo(long ptr long) kernel32.K32GetProcessMemoryInfo
+@ stdcall GetWsChanges(long ptr long) kernel32.K32GetWsChanges
+@ stdcall InitializeProcessForWsWatch(long) kernel32.K32InitializeProcessForWsWatch
+@ stdcall QueryWorkingSet(long ptr long) kernel32.K32QueryWorkingSet
+@ stdcall QueryWorkingSetEx(long ptr long) kernel32.K32QueryWorkingSetEx
diff -uNr a/dlls/psapi/psapi_main2.c a/dlls/psapi/psapi_main2.c
--- a/dlls/psapi/psapi_main2.c	1969-12-31 19:00:00.000000000 -0500
+++ a/dlls/psapi/psapi_main2.c	2018-05-12 14:45:29.370123319 -0400
@@ -0,0 +1,166 @@
+#include "psapi.h"
+
+//#include "windef.h"
+//#include "winbase.h"
+//#include "winreg.h"
+//#include "winnt.h"
+//#include "winternl.h"
+//#include "winnls.h"
+#include <windows.h>
+
+BOOL  WINAPI EnumProcesses(DWORD* one, DWORD two, DWORD* three)
+{
+  return K32EnumProcesses(one, two, three);
+}
+
+
+BOOL  WINAPI EnumProcessModules(HANDLE one, HMODULE* two, DWORD three, LPDWORD four)
+{
+  return K32EnumProcessModules(one, two, three, four);
+}
+
+
+BOOL  WINAPI EnumProcessModulesEx(HANDLE one, HMODULE* two, DWORD three, LPDWORD four, DWORD five)
+{
+  return K32EnumProcessModulesEx(one, two, three, four, five);
+}
+
+
+DWORD WINAPI GetModuleBaseNameA(HANDLE one, HMODULE two, LPSTR three, DWORD four)
+{
+  return K32GetModuleBaseNameA(one, two, three, four);
+}
+
+
+DWORD WINAPI GetModuleBaseNameW(HANDLE one, HMODULE two, LPWSTR three, DWORD four)
+{
+  return K32GetModuleBaseNameW(one, two, three, four);
+}
+
+
+DWORD WINAPI GetModuleFileNameExA(HANDLE one, HMODULE two, LPSTR three, DWORD four)
+{
+  return K32GetModuleFileNameExA(one, two, three, four);
+}
+
+
+DWORD WINAPI GetModuleFileNameExW(HANDLE one, HMODULE two, LPWSTR three, DWORD four)
+{
+  return K32GetModuleFileNameExW(one, two, three, four);
+}
+
+
+BOOL  WINAPI GetModuleInformation(HANDLE one, HMODULE two, LPMODULEINFO three, DWORD four)
+{
+  return K32GetModuleInformation(one, two, three, four);
+}
+
+
+BOOL  WINAPI EmptyWorkingSet(HANDLE one)
+{
+  return K32EmptyWorkingSet(one);
+}
+
+
+BOOL  WINAPI QueryWorkingSet(HANDLE one, PVOID two, DWORD three)
+{
+  return K32QueryWorkingSet(one, two, three);
+}
+
+
+BOOL  WINAPI QueryWorkingSetEx(HANDLE one, PVOID two, DWORD three)
+{
+  return K32QueryWorkingSetEx(one, two, three);
+}
+
+
+BOOL  WINAPI InitializeProcessForWsWatch(HANDLE one)
+{
+  return K32InitializeProcessForWsWatch(one);
+}
+
+
+BOOL  WINAPI GetWsChanges(HANDLE one, PPSAPI_WS_WATCH_INFORMATION two, DWORD three)
+{
+  return K32GetWsChanges(one, two, three);
+}
+
+
+DWORD WINAPI GetMappedFileNameW(HANDLE one, LPVOID two, LPWSTR three, DWORD four)
+{
+  return K32GetMappedFileNameW(one, two, three, four);
+}
+
+
+DWORD WINAPI GetMappedFileNameA(HANDLE one, LPVOID two, LPSTR three, DWORD four)
+{
+  return K32GetMappedFileNameA(one, two, three, four);
+}
+
+
+BOOL  WINAPI EnumDeviceDrivers(LPVOID* one, DWORD two, LPDWORD three)
+{
+  return K32EnumDeviceDrivers(one, two, three);
+}
+
+
+DWORD WINAPI GetDeviceDriverBaseNameA(LPVOID one, LPSTR two, DWORD three)
+{
+  return K32GetDeviceDriverBaseNameA(one, two, three);
+}
+
+
+DWORD WINAPI GetDeviceDriverBaseNameW(LPVOID one, LPWSTR two, DWORD three)
+{
+  return K32GetDeviceDriverBaseNameW(one, two, three);
+}
+
+
+DWORD WINAPI GetDeviceDriverFileNameA(LPVOID one, LPSTR two, DWORD three)
+{
+  return K32GetDeviceDriverFileNameA(one, two, three);
+}
+
+
+DWORD WINAPI GetDeviceDriverFileNameW(LPVOID one, LPWSTR two, DWORD three)
+{
+  return K32GetDeviceDriverFileNameW(one, two, three);
+}
+
+
+BOOL  WINAPI GetProcessMemoryInfo(HANDLE one, PPROCESS_MEMORY_COUNTERS two, DWORD three)
+{
+  return K32GetProcessMemoryInfo(one, two, three);
+}
+
+
+BOOL  WINAPI GetPerformanceInfo(PPERFORMANCE_INFORMATION one, DWORD two)
+{
+  return K32GetPerformanceInfo(one, two);
+}
+
+
+BOOL  WINAPI EnumPageFilesA(PENUM_PAGE_FILE_CALLBACKA one, LPVOID two)
+{
+  return K32EnumPageFilesA(one, two);
+}
+
+
+BOOL  WINAPI EnumPageFilesW(PENUM_PAGE_FILE_CALLBACKW one, LPVOID two)
+{
+  return K32EnumPageFilesW(one, two);
+}
+
+
+DWORD WINAPI GetProcessImageFileNameA(HANDLE one, LPSTR two, DWORD three)
+{
+  return K32GetProcessImageFileNameA(one, two, three);
+}
+
+
+DWORD WINAPI GetProcessImageFileNameW(HANDLE one, LPWSTR two, DWORD three)
+{
+  return K32GetProcessImageFileNameW(one, two, three);
+}
+
+
diff -uNr a/dlls/psapi/psapi.spec a/dlls/psapi/psapi.spec
--- a/dlls/psapi/psapi.spec	2018-04-27 14:23:54.000000000 -0400
+++ a/dlls/psapi/psapi.spec	2018-05-12 14:45:29.380123290 -0400
@@ -1,26 +1,26 @@
-@ stdcall EmptyWorkingSet(long) kernel32.K32EmptyWorkingSet
-@ stdcall EnumDeviceDrivers(ptr long ptr) kernel32.K32EnumDeviceDrivers
-@ stdcall EnumPageFilesA(ptr ptr) kernel32.K32EnumPageFilesA
-@ stdcall EnumPageFilesW(ptr ptr) kernel32.K32EnumPageFilesW
-@ stdcall EnumProcessModules(long ptr long ptr) kernel32.K32EnumProcessModules
-@ stdcall EnumProcessModulesEx(long ptr long ptr long) kernel32.K32EnumProcessModulesEx
-@ stdcall EnumProcesses(ptr long ptr) kernel32.K32EnumProcesses
-@ stdcall GetDeviceDriverBaseNameA(ptr ptr long) kernel32.K32GetDeviceDriverBaseNameA
-@ stdcall GetDeviceDriverBaseNameW(ptr ptr long) kernel32.K32GetDeviceDriverBaseNameW
-@ stdcall GetDeviceDriverFileNameA(ptr ptr long) kernel32.K32GetDeviceDriverFileNameA
-@ stdcall GetDeviceDriverFileNameW(ptr ptr long) kernel32.K32GetDeviceDriverFileNameW
-@ stdcall GetMappedFileNameA(long ptr ptr long) kernel32.K32GetMappedFileNameA
-@ stdcall GetMappedFileNameW(long ptr ptr long) kernel32.K32GetMappedFileNameW
-@ stdcall GetModuleBaseNameA(long long ptr long) kernel32.K32GetModuleBaseNameA
-@ stdcall GetModuleBaseNameW(long long ptr long) kernel32.K32GetModuleBaseNameW
-@ stdcall GetModuleFileNameExA(long long ptr long) kernel32.K32GetModuleFileNameExA
-@ stdcall GetModuleFileNameExW(long long ptr long) kernel32.K32GetModuleFileNameExW
-@ stdcall GetModuleInformation(long long ptr long) kernel32.K32GetModuleInformation
-@ stdcall GetPerformanceInfo(ptr long) kernel32.K32GetPerformanceInfo
-@ stdcall GetProcessImageFileNameA(long ptr long) kernel32.K32GetProcessImageFileNameA
-@ stdcall GetProcessImageFileNameW(long ptr long) kernel32.K32GetProcessImageFileNameW
-@ stdcall GetProcessMemoryInfo(long ptr long) kernel32.K32GetProcessMemoryInfo
-@ stdcall GetWsChanges(long ptr long) kernel32.K32GetWsChanges
-@ stdcall InitializeProcessForWsWatch(long) kernel32.K32InitializeProcessForWsWatch
-@ stdcall QueryWorkingSet(long ptr long) kernel32.K32QueryWorkingSet
-@ stdcall QueryWorkingSetEx(long ptr long) kernel32.K32QueryWorkingSetEx
+@ stdcall EmptyWorkingSet(long)
+@ stdcall EnumDeviceDrivers(ptr long ptr)
+@ stdcall EnumPageFilesA(ptr ptr)
+@ stdcall EnumPageFilesW(ptr ptr)
+@ stdcall EnumProcessModules(long ptr long ptr)
+@ stdcall EnumProcessModulesEx(long ptr long ptr long)
+@ stdcall EnumProcesses(ptr long ptr)
+@ stdcall GetDeviceDriverBaseNameA(ptr ptr long)
+@ stdcall GetDeviceDriverBaseNameW(ptr ptr long)
+@ stdcall GetDeviceDriverFileNameA(ptr ptr long)
+@ stdcall GetDeviceDriverFileNameW(ptr ptr long)
+@ stdcall GetMappedFileNameA(long ptr ptr long)
+@ stdcall GetMappedFileNameW(long ptr ptr long)
+@ stdcall GetModuleBaseNameA(long long ptr long)
+@ stdcall GetModuleBaseNameW(long long ptr long)
+@ stdcall GetModuleFileNameExA(long long ptr long)
+@ stdcall GetModuleFileNameExW(long long ptr long)
+@ stdcall GetModuleInformation(long long ptr long)
+@ stdcall GetPerformanceInfo(ptr long)
+@ stdcall GetProcessImageFileNameA(long ptr long)
+@ stdcall GetProcessImageFileNameW(long ptr long)
+@ stdcall GetProcessMemoryInfo(long ptr long)
+@ stdcall GetWsChanges(long ptr long)
+@ stdcall InitializeProcessForWsWatch(long)
+@ stdcall QueryWorkingSet(long ptr long)
+@ stdcall QueryWorkingSetEx(long ptr long)
diff -uNr a/include/psapi.h a/include/psapi.h
--- a/include/psapi.h	2018-04-27 14:23:54.000000000 -0400
+++ a/include/psapi.h	2018-05-13 16:40:29.084620083 -0400
@@ -25,6 +25,8 @@
 #define PSAPI_VERSION 2
 #endif
 
+#include <windows.h>
+
 typedef struct _MODULEINFO {
   LPVOID lpBaseOfDll;
   DWORD SizeOfImage;
@@ -83,36 +85,6 @@
 extern "C" {
 #endif
 
-#if PSAPI_VERSION > 1
-#define EnumProcesses               K32EnumProcesses
-#define EnumProcessModules          K32EnumProcessModules
-#define EnumProcessModulesEx        K32EnumProcessModulesEx
-#define GetModuleBaseNameA          K32GetModuleBaseNameA
-#define GetModuleBaseNameW          K32GetModuleBaseNameW
-#define GetModuleFileNameExA        K32GetModuleFileNameExA
-#define GetModuleFileNameExW        K32GetModuleFileNameExW
-#define GetModuleInformation        K32GetModuleInformation
-#define EmptyWorkingSet             K32EmptyWorkingSet
-#define QueryWorkingSet             K32QueryWorkingSet
-#define QueryWorkingSetEx           K32QueryWorkingSetEx
-#define InitializeProcessForWsWatch K32InitializeProcessForWsWatch
-#define GetWsChanges                K32GetWsChanges
-#define GetWsChangesEx              K32GetWsChangesEx
-#define GetMappedFileNameW          K32GetMappedFileNameW
-#define GetMappedFileNameA          K32GetMappedFileNameA
-#define EnumDeviceDrivers           K32EnumDeviceDrivers
-#define GetDeviceDriverBaseNameA    K32GetDeviceDriverBaseNameA
-#define GetDeviceDriverBaseNameW    K32GetDeviceDriverBaseNameW
-#define GetDeviceDriverFileNameA    K32GetDeviceDriverFileNameA
-#define GetDeviceDriverFileNameW    K32GetDeviceDriverFileNameW
-#define GetProcessMemoryInfo        K32GetProcessMemoryInfo
-#define GetPerformanceInfo          K32GetPerformanceInfo
-#define EnumPageFilesW              K32EnumPageFilesW
-#define EnumPageFilesA              K32EnumPageFilesA
-#define GetProcessImageFileNameA    K32GetProcessImageFileNameA
-#define GetProcessImageFileNameW    K32GetProcessImageFileNameW
-#endif
-
 BOOL  WINAPI EnumProcesses(DWORD*, DWORD, DWORD*);
 BOOL  WINAPI EnumProcessModules(HANDLE, HMODULE*, DWORD, LPDWORD);
 BOOL  WINAPI EnumProcessModulesEx(HANDLE, HMODULE*, DWORD, LPDWORD, DWORD);
diff -uNr a/programs/taskkill/Makefile.in a/programs/taskkill/Makefile.in
--- a/programs/taskkill/Makefile.in	2018-04-27 14:23:54.000000000 -0400
+++ a/programs/taskkill/Makefile.in	2018-05-12 14:45:31.173451480 -0400
@@ -1,6 +1,6 @@
 MODULE    = taskkill.exe
 APPMODE   = -mconsole -municode
-IMPORTS   = user32
+IMPORTS   = user32 psapi
 
 C_SRCS = taskkill.c
 
diff -uNr a/programs/winedbg/Makefile.in a/programs/winedbg/Makefile.in
--- a/programs/winedbg/Makefile.in	2018-04-27 14:23:54.000000000 -0400
+++ a/programs/winedbg/Makefile.in	2018-05-12 14:45:31.336784346 -0400
@@ -1,6 +1,6 @@
 MODULE    = winedbg.exe
 APPMODE   = -mconsole
-IMPORTS   = dbghelp advapi32
+IMPORTS   = dbghelp advapi32 psapi
 DELAYIMPORTS = comdlg32 shell32 comctl32 user32 gdi32
 EXTRALIBS = $(POLL_LIBS)
 
