# 'Wine-to-rule-them-all' - Wine-TkG config file


#### COMPILER/BUILD OPTIONS ####

# External config file to use - If the given file exists in path, it will override default config (customization.cfg) - Default is ~/.config/frogminer/wine-tkg.cfg
_EXT_CONFIG_PATH=~/.config/frogminer/wine-tkg.cfg

# Override config with one of the presets from /wine-tkg-profiles dir.
# Custom presets : "fo4", "legacy", "mwo", "sims2", "oldnvidia-sims3", "protonified", "unity".
# Clean presets (untouched) : "mainline", "staging".
_LOCAL_PRESET=""

# Set to true to use custom flags defined by _GCC_FLAGS and _LD_FLAGS. All CPU threads will also be used for building independently of your settings.
# Setting this to false will use your system-wide makepkg flags set in /etc/makepkg.conf.
_LOCAL_OPTIMIZED="true"
# Custom GCC flags to use instead of system-wide makepkg flags set in /etc/makepkg.conf. Default is "-pipe -O2 -ftree-vectorize". Don't use -march=native if you want to share your builds accross different machines!
_GCC_FLAGS="-pipe -O2 -ftree-vectorize"
# Custom LD flags to use instead of system-wide makepkg flags set in /etc/makepkg.conf. Default is "-pipe -O2 -ftree-vectorize".
_LD_FLAGS="-pipe -O2 -ftree-vectorize"

# By default, tests are disabled to speed up compilation. If you need them for development purposes, set to "true"
_ENABLE_TESTS="false"

# Set to "debug" to enable incremental building for debugging/development. Set to "false" to skip cleanups. Default "true" will enable housecleaning and sanity tasks.
_NUKR="true"

# Set to true to disable 32-bit wine. Doing so will disable WoW64 and break ALL 32-bit apps. Default is "false".
_NOLIB32="false"

# Set to true to disable 64-bit wine. Doing so will only build 32-bit wine and no SUPPORT for 64-bit apps. Default is "false".
_NOLIB64="false"

# Set to true if you do not want to compile your build after its source is ready - For source sharing/debugging
_NOCOMPILE="false"

# Set to true if you want to skip the initial prompt
_NOINITIALPROMPT="false"

# Set to a string of your choice to override the default dynamic pkgname. Example: "awkward_frog" will result in "wine-tkg-git-awkward_frog" pkgname. You can also use "none" to only get a plain "wine-tkg-git" pkgname.
_PKGNAME_OVERRIDE=""


#### EXTERNAL INSTALLATION SETTINGS ####

# Set to true to install into external path instead of /usr. This allows you to install multiple different versions in parallel.
# !!! Don't forget that you'll have to use /opt/wine-something/bin/wine instead of just wine (same for winecfg etc.) !!!
_EXTERNAL_INSTALL="false"

# "opt" path
_DEFAULT_EXTERNAL_PATH="/opt"

# Set to true to disable versioning in path for external install. For example, this would strip "opt/wine-tkg-opt-git-4.0.r11.gd2a48f1a" to "opt/wine-tkg-opt-git".
_EXTERNAL_NOVER="false"


#### WINE FLAVOUR SETTINGS ####

# plain wine commit (short) or version tag if you want to use a specific wine version. Can use e.g. "64d9f30", "wine-3.16" or "wine-4.0"
# !!! Only affects non-staging builds (you want to edit the staging_version below for staging builds) !!!
# Leave empty to use latest master - https://github.com/wine-mirror/wine/commits/master
_plain_version=""
# use mirror servers(github) for plain wine source. It is usually much faster than main servers but there might be a little delay before it gets synchronized.
_plain_mirrorsrc="true"
# You can optionally uncomment the _configure_userargs="" option below to set custom configure-args, separated by a space (example: "--without-mingw --with-vkd3d")
#_configure_userargs=""

# esync - Enable with WINEESYNC=1 envvar - You may need to raise your fd limits -> https://github.com/zfigura/wine/blob/esync/README.esync
_use_esync="true"
# esync version - https://github.com/zfigura/wine/releases - If you want to use a specific esync version. For 3.20 or higher, use "ce79346". For 3.19 to 3.17, use "b4478b7". For 3.16 and lower, use "5898a69".
# Leave empty for auto-selection depending on detected Wine version.
_esync_version=""

# staging
_use_staging="true"
# staging commit (short) or version tag if you want to use a specific staging version. Can use e.g. "7cfceb7", "v3.16" or "v4.0"
# Leave empty to use latest master - https://github.com/wine-staging/wine-staging/commits/master
_staging_version=""
# You can optionally uncomment the _staging_userargs="" option to disable desired wine-staging patchsets.
# For example, to disable the 'wined3d-Indexed_Vertex_Blending' patchset, the line below would look like this : _staging_userargs="-W wined3d-Indexed_Vertex_Blending"
# You can also disable multiple patchsets ('wined3d-WINED3D_RS_COLORWRITEENABLE' and 'wined3d-Indexed_Vertex_Blending' in the following example : _staging_userargs="-W wined3d-WINED3D_RS_COLORWRITEENABLE -W wined3d-Indexed_Vertex_Blending"
#_staging_userargs=""

# pba - Enable with PBA_ENABLE=1 envvar, force-disabled on 3.19 & higher due to known broken state
_use_pba="true"

# vkd3d - Use the currently installed vkd3d packages (both 32 and 64-bit) for d3d12 to vulkan translation - If they aren't (both) installed, vkd3d won't be used
# !!! Requires DXVK's dxgi to be disabled (_dxvk_dxgi="false" below) !!!
_use_vkd3d="false"

# dxvk - Replaces wined3d d3d10 and d3d11 with winelib DXVK for d3d10 and d3d11 translation
_use_dxvk="false"
# use dxvk's own dxgi instead of wine's - This is helpful for some games (nvapi bypass anyone?) but breaks vkd3d compatibility
_dxvk_dxgi="true"
# dxvk commit (short) or version tag if you want to use a specific dxvk version. Can use e.g. "195fb582" or "v1.0.1"
# Leave empty to use latest master - https://github.com/doitsujin/dxvk/commits/master
_dxvk_version=""
# Use the DXVK "Async" patch. WARNING: may cause anti-cheat systems to go off.
_dxvk_async="false"

# legacy gallium nine - This is only available for 4.1-devel (prior to e24b162) and older wine versions
_use_legacy_gallium_nine="false"

# d9vk - Replaces wined3d d3d9 with winelib D9VK for d3d9 translation - https://github.com/Joshua-Ashton/d9vk
_use_d9vk="false"
# d9vk commit (short) or version tag if you want to use a specific d9vk version. Can use e.g. "195fb582" or "v1.0.1"
# Leave empty to use latest master - https://github.com/Joshua-Ashton/d9vk/commits/master
_d9vk_version=""

# Faudio - Use the currently installed Faudio packages (both 32 and 64-bit) for xaudio2 - Fixes sound issues in various games. Disables xaudio2 & winepulse staging patchsets
# Support is enabled by default in Wine 4.3(plain only) and newer, independently of this setting
_use_faudio="true"
# In case your Faudio libraries are frogged, set to "true" to ignore the check. You'll be able to build, but xaudio2 support will be frogged.
# Only use this in a case similar to this : your lib32-faudio libs are not found by wine, but you don't care because your game is 64-bit.
_faudio_ignorecheck="false"


#### GAME-SPECIFIC PATCHES ####

# Path of exile - Fixes DX11 mode not working - Doesn't seem to be needed anymore since Wine 4.1, supposedly since a game patch - https://bugs.winehq.org/show_bug.cgi?id=42695
_poe_fix="false"

# Fix for Warframe Launcher failing to update itself - https://bugs.winehq.org/show_bug.cgi?id=33845 https://bugs.winehq.org/show_bug.cgi?id=45701
# https://www.winehq.org/pipermail/wine-devel/2018-October/133068.html - Merged in staging 8b930ae (4.6 devel)
_warframelauncher_fix="true"

# Workaround for Final Fantasy XIV Launcher 404 error - Thanks @varris1 !
_ffxivlauncher_fix="false"

# Disable server-send_hardware_message staging patchset if found - Fixes FFXIV/Warframe/Crysis 3 (etc.) mouse jittering on 3.19 staging and lower. Will cause GTA V to freeze for a second or two on first keyboard input
_server_send_hwmsg_disable="true"

# Workaround for F4SE/SkyrimSE Script Extender - This is a hack and could break stuff - https://github.com/hdmap/wine-hackery/tree/master/f4se
_f4skyrimse_fix="false"

# Fortnite crash fix - "Working once every fortnite" ~FeetOnGrass - https://github.com/Guy1524/fortnite-wine/
_fortnite_fix="false"

# The Sims 2 fix - On staging, disables wined3d-WINED3D_RS_COLORWRITEENABLE and wined3d-Indexed_Vertex_Blending patchsets - https://bugs.winehq.org/show_bug.cgi?id=8051
_sims2_fix="false"

# The Sims 3 fix for Nvidia on older than 415.xx drivers - https://bugs.winehq.org/show_bug.cgi?id=45361
_sims3_fix="false"

# Python fix for <=3.18 (backported from zzhiyi's patches) - fix for python and needed for "The Sims 4" to work - replaces staging partial implementation - https://bugs.winehq.org/show_bug.cgi?id=44999 - This will only apply against a wine tree missing 3ebd2f0be30611e6cf00468c2980c5092f91b5b5, and ignored otherwise
_318python_fix="true"

# Fixes Magic The Gathering: Arena (and various other unity games) crashing when downloading game files - https://bugs.winehq.org/show_bug.cgi?id=45546
_mtga_fix="false"

# Mechwarrior Online fix - https://mwomercs.com/forums/topic/268847-running-the-game-on-ubuntu-steam-play/page__st__20__p__6195387#entry6195387
_mwo_fix="false"

# Resident Evil 4 hack - https://bugs.winehq.org/show_bug.cgi?id=46336
_re4_fix="false"

# World of Final Fantasy fix - hack to enable required child window rendering support - https://bugs.winehq.org/show_bug.cgi?id=45277
_woff_fix="false"

# Fix for LoL 9.10+ crashing - https://bugs.winehq.org/show_bug.cgi?id=47198 - Requires vdso32 disabled (echo 0 > /proc/sys/abi/vsyscall32)
_lol910_fix="false"

# Overwatch mf crash fix from Guy1524 - https://bugs.winehq.org/show_bug.cgi?id=47385 - This will only apply against a wine tree missing b182ba882cfcce7b8769470f49f0fba216095c45, and ignored otherwise
_OW_fix="true"

# Fix for Assetto Corsa performance drop when HUD elements are displayed - https://bugs.winehq.org/show_bug.cgi?id=46955
_assettocorsa_hudperf_fix="false"

# Disable staging PA patchset - Some people have had issues with the winepulse staging patchset, usually caused by pulseaudio misconfiguration (also called default configuration)
_staging_pulse_disable="false"


#### OTHER PATCHES ####

# CSMT toggle patch - Corrects the CSMT toggle to be more logical - https://github.com/wine-staging/wine-staging/pull/60/commits/ad474559590a659b3df72ec9965de20c7f51c3a8
_CSMT_toggle="true"

# GLSL toggle patch - Requires staging, ignored if legacy Gallium Nine is used. Gives the ability to use ARB shaders in winecfg, noticable stutter reduction with games using wined3d.
# Enabling this option will interfere with Gallium HUD
_GLSL_toggle="false"

# Disable mime-types registering
_MIME_NOPE="true"

# steam crossover hack for store/web functionality - https://bugs.winehq.org/show_bug.cgi?id=39403
_steam_fix="true"

# low latency alsa patch - Requires staging. Using this patch for something else than Osu! isn't recommended - https://blog.thepoon.fr/osuLinuxAudioLatency/
_lowlatency_audio="false"

# launch with dedicated gpu desktop entry patch - makes an additional desktop entry which launches app with DRI_PRIME set to 1 (only for switchable graphics with mesa drivers)
_launch_with_dedicated_gpu="false"

# use CLOCK_MONOTONIC instead of CLOCK_MONOTONIC_RAW in ntdll/server - Increases performance in some CPU limited cases - https://github.com/ValveSoftware/wine/commit/eece6bb2e453e16e99ec61f75fb4152ab4a939d8
_clock_monotonic="true"

# Bypass compositor in fullscreen mode - Reduces stuttering and improves performance - https://github.com/ValveSoftware/wine/commit/141ba5cf73029029a5a0bd2cdcfd5f9f9ab7ee7b
_FS_bypass_compositor="false"

# Proton Fullscreen patch - Requires staging & 3.16+ - Allows resolution changes for fullscreen games without changing desktop resolution - ! will enforce _FS_bypass_compositor="true" !
_proton_fs_hack="false"

# Partial fix for systray on plasma 5 - https://bugs.winehq.org/show_bug.cgi?id=38409
_plasma_systray_fix="false"

# IMAGE_FILE_LARGE_ADDRESS_AWARE override - Will be force-disabled on lower than 3.19 - Useful for 32-bit games hitting address space limitations - Enable with WINE_LARGE_ADDRESS_AWARE=1
_large_address_aware="true"

# Enable STAGING_SHARED_MEMORY by default - Depends on staging - EA Origin Client seems to dislike that option - You can set this to false and enable the feature from env var instead (STAGING_SHARED_MEMORY=1) - https://wiki.winehq.org/Wine-Staging_Environment_Variables#Shared_Memory
_stg_shared_mem_default="false"

# Update winevulkan to whatever version I have pushed last, til next time, for new shiny and tasty vk extensions support. Thanks dadドイツ人 !
_update_winevulkan="true"

# Fix crashes or perf issues related to high core count setups - Fixed in 4.0 - https://bugs.winehq.org/show_bug.cgi?id=45453
_highcorecount_fix="true"

# Nvidia hate - Prevents building of nvapi/nvapi64, nvcuda, nvcuvid and nvencodeapi/nvencodeapi64 libs
_nvidia_hate="false"

# Sets the value of an additional fake refresh rate in wine virtual desktop and proton FS hack. Supposedly helps with frame timing on some setups (freesync especially)
# Example values: "75", "120", "144" etc. Leave empty to keep the default behaviour (60Hz as the only fake value)
_fake_refresh_rate=""

# Raw input fix by Guy1524
_rawinput_fix="false"


#### USER PATCHES - See README in ./wine-tkg-userpatches dir for instructions ####

# Userpatches variable below must be set to true to enable userpatches support.
_user_patches="true"

# Apply all user patches without confirmation - !!! NOT RECOMMENDED !!!
_user_patches_no_confirm="false"
